// Title: 2012 Test Statistic for Checking the Quadratic Regression Function for the Data without AR Structure
// Author: Sepideh Mosaferi
// Date: April 2023

new;
library pgraph;
pqgwin many;

// test statistic
proc ( 1 ) = Test2012_quadratic(y,x,h);
    local n,arg,ker,xmat,theta,gxtheta,u2,u2_m,S_N,u2power,u2_2m,ker2,V_N2,Z_N;
    n = rows(y);      
    arg = (x*ones(1,n)-ones(n,1)*x')/h; 
    ker = pdfn(arg); 
    xmat = zeros(n, 3);
    xmat[.,1]=ones(n,1);
    xmat[.,2]=x;
    xmat[.,3]=x^2;
    theta=pinv(xmat'*xmat)*xmat'*y;  
    gxtheta = theta[1]+theta[2]*x+theta[3]*x^2;  
    u2 = (y-gxtheta);
    u2_m = ((u2*ones(1,n)).*(ones(n,1)*u2'));
    S_N = sumc(sumc(diagrv(u2_m.*ker,0)));    
    u2power = u2^2;
    u2_2m = ((u2power*ones(1,n)).*(ones(n,1)*u2power'));
    ker2 = ker^2;     
    V_N2 = sumc(sumc(diagrv(u2_2m.*ker2,0)));    
    Z_N = S_N/sqrt(2*V_N2);    
    retp(Z_N);
endp;

// read data
load Data_woAR[80,4]= "/Users/sepidehmosaferi/Desktop/DATA_woAR.txt";

// y & x
y = Data_woAR[.,2];
x = Data_woAR[.,1];
Data_woAR = y~x;

// sample size
N = rows(Data_woAR);

// subsampling Process
block1 = 0.5*(N^0.5); 
block2 = (N^0.5);
block3 = 2*(N^0.5);
block4 = 4*(N^0.5);
block5 = 6*(N^0.5);

// h_N and h_b's should be based on Cross Validation.
       
h_N = 0.25;
       
h_b1 = 0.25;
h_b2 = 0.25;
h_b3 = 0.25;
h_b4 = 0.25;
h_b5 = 0.25;
        
// test 2012: quadratic test       
Test_all = Test2012_quadratic(Data_woAR[.,1],Data_woAR[.,2],h_N);
       
// subDATA for block1
numblock1 = N-block1+1;
subDATA1 = areshape(0,numblock1|block1|2);
j = 1;
do until j > numblock1;
    subDATA1[j,.,.] = Data_woAR[j:(j+block1-1),.];
    j = j+1;
endo;
       
sub_Test_1 = zeros(numblock1,1);
l = 1;
do until l > numblock1;
    sub_Test_1[l,1] = Test2012_quadratic(arraytomat(subDATA1[l,.,1]),arraytomat(subDATA1[l,.,2]),h_b1);
    l = l+1;
endo;

// indicator for p-value for block1    
Ind_accept_1 = zeros(numblock1,1);
z=1;
do until z > numblock1;  
    Ind_accept_1[z] = abs(Test_all) <= abs(sub_Test_1[z]);  @ acceptance indicator @
    z = z+1;
    endo;

// p-value      
pvalue_block1 = meanc(Ind_accept_1); 

       
// subDATA for block2
numblock2 = N-block2+1;
subDATA2 = areshape(0,numblock2|block2|2);
j = 1;
do until j > numblock2;
    subDATA2[j,.,.] = Data_woAR[j:(j+block2-1),.];
    j = j+1;
endo;
       
sub_Test_2 = zeros(numblock2,1);
l = 1;
do until l > numblock2;
    sub_Test_2[l,1] = Test2012_quadratic(arraytomat(subDATA2[l,.,1]),arraytomat(subDATA2[l,.,2]),h_b2);
    l = l+1;
endo;

// indicator for p-value for block2    
Ind_accept_2 = zeros(numblock2,1);
z=1;
do until z > numblock2;  
    Ind_accept_2[z] = abs(Test_all) <= abs(sub_Test_2[z]);  @ acceptance indicator @
    z = z+1;
    endo;
      
// p-value   
pvalue_block2 = meanc(Ind_accept_2); 

       
// subDATA for block3
numblock3 = N-block3+1;
subDATA3 = areshape(0,numblock3|block3|2);
j = 1;
do until j > numblock3;
    subDATA3[j,.,.] = Data_woAR[j:(j+block3-1),.];
    j = j+1;
endo;
       
sub_Test_3 = zeros(numblock3,1);
l = 1;
do until l > numblock3;
    sub_Test_3[l,1] = Test2012_quadratic(arraytomat(subDATA3[l,.,1]),arraytomat(subDATA3[l,.,2]),h_b3);
    l = l+1;
endo;

// indicator for upper p-value for block3    
Ind_accept_3 = zeros(numblock3,1);
z=1;
do until z > numblock3;  
    Ind_accept_3[z] = abs(Test_all) <= abs(sub_Test_3[z]);  @ acceptance indicator @
    z = z+1;
    endo;

// p-value      
pvalue_block3 = meanc(Ind_accept_3); 

       
// subDATA for block4
numblock4 = N-block4+1;
subDATA4 = areshape(0,numblock4|block4|2);
j = 1;
do until j > numblock4;
    subDATA4[j,.,.] = Data_woAR[j:(j+block4-1),.];
    j = j+1;
endo;
       
sub_Test_4 = zeros(numblock4,1);
l = 1;
do until l > numblock4;
    sub_Test_4[l,1] = Test2012_quadratic(arraytomat(subDATA4[l,.,1]),arraytomat(subDATA4[l,.,2]),h_b4);
    l = l+1;
endo;

// indicator for p-value for block4    
Ind_accept_4 = zeros(numblock4,1);
z=1;
do until z > numblock4;  
    Ind_accept_4[z] = abs(Test_all) <= abs(sub_Test_4[z]);  @ acceptance indicator s@
    z = z+1;
    endo;

// p-value      
pvalue_block4 = meanc(Ind_accept_4); 


// subDATA for block5
numblock5 = N-block5+1;
subDATA5 = areshape(0,numblock5|block5|2);
j = 1;
do until j > numblock5;
    subDATA5[j,.,.] = Data_woAR[j:(j+block5-1),.];
    j = j+1;
endo;
       
sub_Test_5 = zeros(numblock5,1);
l = 1;
do until l > numblock5;
    sub_Test_5[l,1] = Test2012_quadratic(arraytomat(subDATA5[l,.,1]),arraytomat(subDATA5[l,.,2]),h_b5);
    l = l+1;
endo;

// indicator for p-value for block5    
Ind_accept_5 = zeros(numblock5,1);
z=1;
do until z > numblock5;  
    Ind_accept_5[z] = abs(Test_all) <= abs(sub_Test_5[z]);  @ acceptance indicator s@
    z = z+1;
    endo;

// p-value      
pvalue_block5 = meanc(Ind_accept_5); 

